mixin basic-api
  //- ***********************************
  //- HTML for the Basic API
  .span9.basic-api-page(style='display: none;')
    .hero-unit
      h1 Basic API
    //- Stativus Definitions
    //- ***************************
    h2 Stativus
    h6 namespace
    br
    h4 Function
    h3: code createStatechart\(\)
    h4 Parameters
    ul
      li: em none
    h4 Description
    p This is the function to actually create the statechart.  This is the only function that needs to be called 
      strong: em first
      |  in order for the other functions to work.  This returns a 
      strong: em Stativus.Statechart
      |  object.  You can create as many statecharts as you want. You can even create them in your views to control
      |  how the view works in any of the MVC frameworks out there
    h4 Example
    pre
      | var statechart = Stativus.createStatechart();
    hr
    //- Stativus.Statechart Definitions
    //- ***************************
    h2 Stativus.Statechart
    h6 namespace
    
    //- Section
    h4 Function
    h3: code addState\( name, def1, def2, ... \)
    h4 Parameters
    ul
      li
        strong 'name' :: 
        em String  - REQUIRED
      li 
        strong 'def
        em n
        strong ' :: 
        em  Object | Hash - REQUIRED &raquo; see Stativus.State.DefinitionParameters
    h4 Description
    p this function creates the state and you pass in the definition of the state.  An interesting bonus is that you 
      | can send in as many of these as you would like.  This helps when you have the same action or configuration that 
      | needs to go in several states.
    h4 Example
    pre
      | statechart.addState( 'first_state', {
      |   // Stativus.State.DefinitionParameters
      | });
    hr
    //- Section
    h4 Function
    h3: code initStates\( name \)
    h4 Parameters
    ul
      li
        strong 'name' :: 
        em String | Hash  - REQUIRED
    h4 Description
    p This actually initializes the statechart and make the statechart enter the initial state. If the 
      strong 'name' 
      | is a 
      em String 
      | then it represents the name of the state in the 
      em DEFAULT 
      | statechart. If the value is an 
      em Hash | Object 
      | then it represents a key-value pair of the initial states for all the global concurrent states. 
      | global state = 
      em KEY 
      | and initial state name = 
      em VALUE
    h4 Example
    pre
      | // Example #1: String
      | statechart.initStates('first_state');
      | // Example #2: Hash | Object
      | statechart.initStates({'default': 'first_state', 'modal_states': 'first_modal');
    hr
    //- Section
    h4 Function
    h3: code sendEvent\( name, param1, param2, ... \)
    h4 Parameters
    ul
      li
        strong 'name' :: 
        em String - REQUIRED
      li
        strong 'param
        em n
        strong ' :: 
        em  OPTIONAL
    h4 Description
    p This sends an event to all the global concurrent states.  If you are in a state that has the event/action
      | defined then it will respond with this trigger.  You can have 
      em N
      | -number of parameters of any type and they will be passed to the function definition for the event on
      | the current states.
    h4 Example
    pre
      | // Example #1: no params
      | statechart.sendEvent('viewMenu');
      | // Example #2: one param
      | statechart.sendEvent('openMenuItem', 3);
      | // Example #3: n-params
      | statechart.sendEvent('myFavoriteEvent', 3, 'Blue', {lots: 'of', 'other': 'Things'});
    hr
    //- Section
    h4 Function
    h3: code getState\( name, globalState\)
    h4 Parameters
    ul
      li
        strong 'name' :: 
        em String - REQUIRED
      li
        strong 'globalState' :: 
        em String - OPTIONAL
    h4 Description
    p This is what you call to fetch a state. The second param, 
      em 'globalState' 
      | is an optional param set to the global concurrent state name.  If you don't pass anything in
      | it defaults to 
      em 'default'
      | .
    h4 Example
    pre
      | // Example #1: no global param
      | var state = statechart.getState('state_one');
      | // Example #2: global conncurrent state param
      | var state = statechart.sendEvent('other_state', 'modal_states');
    hr
    //- Section
    h4 Function
    h3: code currentState\(globalState\)
    h4 Parameters
    ul
      li
        strong 'globalState' :: 
        em String - OPTIONAL
    h4 Description
    p This is a helper function that will give you an array of all the current states that your are in. The param
      em 'globalState' 
      | is an optional param set to the global concurrent state name.  If you don't pass anything in
      | it defaults to 
      em 'default'
      | .
    h4 Example
    pre
      | // Example #1: no global param
      | var states = statechart.currentState();
      | // Example #2: global conncurrent state param
      | var states = statechart.currentState('modal_states');
    hr
    //- Section
    h4 Function 
      em - DEBUG_MODE ONLY!
    h3: code inState\(name, globalState\)
    h4 Parameters
    ul
      li 
        strong 'name' :: 
        em String - REQUIRED
      li
        strong 'globalState' :: 
        em String - REQUIRED
    h4 Description
    p This is a helper function when you are using the 
      em DEBUG_MODE 
      | version of the code. It will return 
      em true 
      | or 
      em false 
      | if you are in a state. This can be helpful for debugging. Not to be used in production.
      | .
    h4 Example
    pre
      | if ( statechart.inState('state_one', 'default') ) {
      |   // do something ;
      | } 
    hr
    //- Stativus.State
    //- ***************************
    h2 Stativus.State
    h6 namespace
    //- Section
    h4 Function
    h3: code setData\(key, value\)
    h4 Parameters
    ul
      li
        strong 'key' :: 
        em String - REQUIRED
      li
        strong 'value' :: 
        em ANY - REQUIRED
    h4 Description
    p This is the function that sets the local data to the state.  You would use this when you need to pass/set data to 
      | be used in a state.
    h4 Example
    pre
      | var state = statechart.getState('state_one');
      | state.setData('id', 123);
    hr
    //- Section
    h4 Function
    h3: code getData\(key\)
    h4 Parameters
    ul
      li
        strong 'key' :: 
        em String - REQUIRED
    h4 Description
    p This is the function that gets the local data to the state.  You would use this when you need to retrieve local state data. 
      | The beauty of the state data storage is that it won't conflict with any other states local data.
    h4 Example
    pre
      | var state = statechart.getState('state_one');
      | state.getData('id');
    hr
    //- Stativus.State.DefinitionParameters
    //- ***************************
    h2 Stativus.State.DefinitionParameters
    h6 definitions
    //- Section
    h4 Parameter
    h3: code globalConcurrentState
    ul
      li
        strong Type :: 
        em String - OPTIONAL
      li
        strong Default Value :: 
        em 'default'
    h4 Description
    p This is the name of the global concurrent state that this state belongs to.  This is set in the
      code addState()
      | function and does not ever change.
    h4 Example
    pre
      | statechart.addState('state_one', {
      |   globalConcurrentState: 'modal_states'
      |   // more Stativus.State.DefinitionParameters...
      | });
    hr
    //- Section
    h4 Parameter
    h3: code parentState
    ul
      li
        strong Type :: 
        em String - OPTIONAL
      li
        strong Default Value :: 
        em undefined
    h4 Description
    p This value sets who the parent state of this substate is.  You do not need to add these in order, even though
      | its a good idea.  If you do not set a value or set it to 
      em null 
      | the statechart assumes that this is a top level state. It is added once in
      code addState()
      | function and never changes.
    h4 Example
    pre
      | statechart.addState('substate_one', {
      |   parentState: 'state_one'
      |   // more Stativus.State.DefinitionParameters...
      | });
    hr
    //- Section
    h4 Parameter
    h3: code initialSubstate
    ul
      li
        strong Type :: 
        em String - REQUIRED if you have substates
      li
        strong Default Value :: 
        em undefined
    h4 Description
    p This value sets in a parent state to tell it what substate to enter when someone calls
      code this.goToState('\< parentStateName \>')
      | . Technically, it isn't 
      em required 
      | persay, but it bad practice to just enter a parent state with substates and not go to a substate. 
      | This is added in the 
      code addState()
      | function and never changes.
    h4 Example
    pre
      | statechart.addState('state_one', {
      |   initialSubstate: 'substate_one',
      |   // more Stativus.State.DefinitionParameters...
      | });
    hr
    //- Stativus.State.DefinitionParameters
    //- ***************************
    h2 Stativus.State.DefinitionEvents
    h6 definitions
    //- Section
    h4 Function
    h3: code enterState: function\(\)
    h4 Parameters - 
      em none
    p This is the first of the important default state events that need to be defined.  This event gets called when a state
      | gets entered.  This is 
      em optional 
      | and is added in the 
      code addState()
      | function and never changes.
    h4 Example
    pre
      | statechart.addState('state_one', {
      |   // Stativus.State.DefinitionParameters...
      |   enterState: function(){
      |     // code that sets up the view or state.
      |   },
      |   // more Stativus.State.DefinitionEvents...
      | });
    hr
    //- Section
    h4 Function
    h3: code exitState: function\(\)
    h4 Parameters - 
      em none
    p This is the second most important of the default state events that need to be defined.  This event gets called when a state
      | gets exited.  This is 
      em optional 
      | and is added in the 
      code addState()
      | function and never changes.
    h4 Example
    pre
      | statechart.addState('state_one', {
      |   // Stativus.State.DefinitionParameters...
      |   exitState: function(){
      |     // code that tears down the view or state.
      |   },
      |   // more Stativus.State.DefinitionEvents...
      | });
    hr
    
    